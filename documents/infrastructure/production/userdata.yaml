Resources:
  # Put the entire user data when actually testing the entire thing
  ##########################################################################
  #                                                                        #
  #                     EC2 Launch Template                                #
  #                                                                        #
  ##########################################################################
  # A “blueprint” that describes how web server EC2 instances should look (OS image, instance type, security groups, startup script, disk size).
  NoteStripLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: NoteStripAppLaunchTemplate  
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: t3.micro           # Instance size/type (low-cost general purpose)
        IamInstanceProfile:
          Arn: !GetAtt EC2InstanceProfile.Arn  # Links EC2 to IAM instance profile (for S3, CloudWatch access)
        SecurityGroupIds:
          - !Ref EC2SecurityGroup        # Security group for controlling inbound/outbound traffic
        NetworkInterfaces:
          - AssociatePublicIpAddress: false   # Ensures instance gets no public IP (private subnet)
            DeviceIndex: 0                    # Primary network interface
        UserData: !Base64 |                   # Startup script that runs when instance launches
          #!/bin/bash
          set -e

          # Update packages
          yum update -y

          # Install Node.js, unzip, nginx, aws-cli
          curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
          yum install -y nodejs unzip nginx aws-cli

          # Create application directory
          mkdir -p /opt/NoteStrip

          # Download application zip from S3
          aws s3 cp s3://notestrip-storage-bucket/NoteStrip.zip /tmp/NoteStrip.zip
          unzip -o /tmp/NoteStrip.zip -d /opt/

          # Install backend dependencies
          cd /opt/NoteStrip/backend
          npm install --production

          # Install frontend dependencies and build
          cd /opt/NoteStrip/frontend
          npm install
          npm run build

          # Configure nginx to serve frontend and proxy API
          cat > /etc/nginx/conf.d/notestrip.conf << 'EOF'
          server {
              listen 80;

              location /api/ {
                  proxy_pass http://localhost:5000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }

              location / {
                  root /opt/NoteStrip/frontend/dist;
                  index index.html;
                  try_files $uri /index.html;
              }
          }
          EOF

          rm -f /etc/nginx/conf.d/default.conf || true

          # Enable and start nginx
          systemctl enable nginx
          systemctl restart nginx

          # Install PM2 globally
          npm install -g pm2

          # Install PM2 CloudWatch module
          npm install -g pm2-cloudwatch

          # Set PM2 CloudWatch configuration
          pm2 set pm2-cloudwatch:logGroupName "/notestrip/app/logs"
          pm2 set pm2-cloudwatch:logStreamName "backend"
          pm2 set pm2-cloudwatch:region "${AWS::Region}"

          # Start PM2 CloudWatch module
          pm2 module:install pm2-cloudwatch

          # Start backend app under PM2
          cd /opt/NoteStrip/backend
          pm2 start npm --name "notestrip-backend" -- run backend-prod

          # Save PM2 process list and enable startup
          pm2 save
          pm2 startup systemd -u ec2-user --hp /home/ec2-user
        BlockDeviceMappings:
          - DeviceName: /dev/xvda             # Root volume device name
            Ebs:
              VolumeSize: 20                  # Disk size (20 GB)
              VolumeType: gp3                 # General-purpose SSD
              DeleteOnTermination: true       # Deletes volume when instance is terminated
        TagSpecifications:
          - ResourceType: instance            # Applies tags to EC2 instances launched
            Tags:
              - Key: Name
                Value: NoteStripAppServer      # Name tag for easy identification