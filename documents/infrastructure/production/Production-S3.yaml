AWSTemplateFormatVersion: '2010-09-09'
Description: "NoteStrip's S3. Only the user created here has access to this bucket."

Resources:
  # S3 bucket (private)
  NoteStripS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: notestrip-application
      AccessControl: Private                      # By default, everything is private
      PublicAccessBlockConfiguration:             # Explicitly blocks any kind of public access (this prevents accidents like making the bucket world-readable).
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      CorsConfiguration:                                      # Defines CORS rules (Cross-Origin Resource Sharing).
        CorsRules:                                                                      
          - AllowedOrigins: ["*"]                             # Any origin (*) can interact with this bucket.  
            AllowedMethods: ["GET", "HEAD", "PUT", "DELETE"]  # Allows GET, HEAD, PUT, DELETE.
            AllowedHeaders: ["*"]                             # Allows all request headers.
            ExposedHeaders: ["ETag", "x-amz-request-id"]      # Explicitly exposes certain response headers (ETag, x-amz-request-id) to the browser.
            MaxAge: 3000                                      # How long the browser caches the preflight response (3000 seconds).
      Tags:
        - Key: Name
          Value: notestrip-application-s3

  # Bucket policy to enforce TLS; Attached to the bucket
  NoteStripS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NoteStripS3Bucket                  # Refers to the bucket created above.
      PolicyDocument:                                 
        Version: "2012-10-17"
        Statement:
          - Sid: EnforceTLS                           # This policy denies all requests over plain HTTP.
            Effect: Deny  
            Principal: "*"                            # applies to everyone.
            Action: "s3:*"                            # all S3 actions
            Resource:                                 # the bucket itself and all objects inside it
              - !Sub "${NoteStripS3Bucket.Arn}"
              - !Sub "${NoteStripS3Bucket.Arn}/*"
            Condition:                                # If aws:SecureTransport is false (meaning not using HTTPS/TLS), the request is denied.
              Bool:
                aws:SecureTransport: "false"

  # IAM user for accessing the bucket
  NoteStripIAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: user-with-s3-notestrip-access
      Tags:
        - Key: Name
          Value: user-with-s3-notestrip-access

  # IAM policy attached to user for bucket access
  NoteStripIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: NoteStripS3AccessPolicy
      Users:
        - !Ref NoteStripIAMUser
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow                                               # Lets the user see the list of objects (but not download them yet).
            Action:
              - s3:ListBucket
            Resource: !Sub "arn:aws:s3:::notestrip-application"
          - Effect: Allow                                               # Lets the user download, upload, and delete files.
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource: !Sub "arn:aws:s3:::notestrip-application/*"

  # Generates an access key pair (AccessKeyId + SecretAccessKey) for the IAM user.
  NoteStripIAMAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref NoteStripIAMUser

Outputs:
  S3BucketName:
    Description: "Name of the S3 bucket"
    Value: !Ref NoteStripS3Bucket

  IAMAccessKeyId:
    Description: "Access Key ID for the S3 IAM user"
    Value: !Ref NoteStripIAMAccessKey
    Export:
      Name: NoteStripAccessKeyId

  IAMSecretAccessKey:
    Description: "Secret Access Key for the S3 IAM user (only visible at stack creation)"
    Value: !GetAtt NoteStripIAMAccessKey.SecretAccessKey
    Export:
      Name: NoteStripSecretAccessKey

# What this does:
#   Creates private S3 bucket with CORS for web access.
#   Blocks all public access.
#   Creates IAM user just for this bucket.
#   Attaches least-privilege policy to that user.
#   Creates an Access Key and Secret Key for programmatic access (only shown once after stack creation in CloudFormation outputs).